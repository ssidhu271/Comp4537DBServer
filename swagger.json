{
  "openapi": "3.0.0",
  "info": {
    "title": "Grey Dune",
    "version": "1.0.0",
    "description": "Centralized documentation for API endpoints."
  },
  "servers": [
    {
      "url": "https://comp4537databaseserver-ahgghrarabaxhyec.westus-01.azurewebsites.net"
    }
  ],
  "components": {
    "securitySchemes": {
      "CookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "jwt"
      }
    }
  },
  "security": [
    {
      "CookieAuth": []
    }
  ],
  "paths": {
    "/api/v1/auth/validate": {
      "get": {
        "summary": "Validate Token",
        "description": "Validates the authentication token stored in a cookie and returns the validation status.",
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token is valid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authenticated": {
                      "type": "boolean"
                    },
                    "role": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid token or unauthorized access."
          }
        }
      }
    },
    "/api/v1/login": {
      "post": {
        "summary": "User Login",
        "description": "Authenticates a user and returns a cookie with JWT token within it.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials."
          }
        }
      }
    },
    "/api/v1/register": {
      "post": {
        "summary": "User Registration",
        "description": "Registers a new user in the system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or role."
          }
        }
      }
    },
    "/api/v1/forgot-password": {
      "post": {
        "summary": "Forgot Password",
        "description": "Generates a reset code for a user and sends it via email.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset code sent successfully."
          },
          "500": {
            "description": "User not found or email sending failed."
          }
        }
      }
    },
    "/api/v1/reset-password": {
      "post": {
        "summary": "Reset Password",
        "description": "Resets a user password using a reset code.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "resetCode": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully."
          },
          "400": {
            "description": "Invalid or expired reset code."
          }
        }
      }
    },
    "/api/v1/user-data": {
      "get": {
        "summary": "Get User Data",
        "description": "Fetches API usage data for the authenticated user.",
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "api_calls": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access."
          }
        }
      }
    },
    "/api/v1/admin-data": {
      "get": {
        "summary": "Get Admin Data",
        "description": "Retrieves API usage and role information for all users only viewed by admin.",
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved admin data."
          },
          "403": {
            "description": "Access denied."
          }
        }
      }
    },
    "/api/v1/wav-files": {
      "post": {
        "summary": "Add WAV File",
        "description": "Allows an authenticated user to upload a WAV file.",
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileName": {
                    "type": "string"
                  },
                  "fileBlob": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully."
          },
          "500": {
            "description": "Error uploading the file."
          }
        }
      },
      "get": {
        "summary": "Get WAV Files",
        "description": "Fetches all WAV files uploaded by the authenticated user.",
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of WAV files."
          },
          "500": {
            "description": "Error fetching files."
          }
        }
      }
    },
    "/api/v1/wav-files/{id}": {
      "put": {
        "summary": "Update WAV File Name",
        "description": "Updates the name of a specific WAV file.",
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the WAV file to update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File name updated successfully."
          },
          "500": {
            "description": "Error updating file name."
          }
        }
      },
      "delete": {
        "summary": "Delete WAV File",
        "description": "Deletes a specific WAV file.",
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the WAV file to delete.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File deleted successfully."
          },
          "500": {
            "description": "Error deleting file."
          }
        }
      }
    },
    "/api/v1/usage-stats": {
      "get": {
        "summary": "API Usage Statistics",
        "description": "Provides statistics for all API endpoints.",
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "API usage statistics retrieved successfully."
          },
          "403": {
            "description": "Access denied."
          }
        }
      }
    },
    "/api/v1/update-role": {
      "put": {
        "summary": "Update User Role",
        "description": "Updates the role of a user (admin only).",
        "security": [
          {
            "CookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer"
                  },
                  "newRole": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role updated successfully."
          },
          "403": {
            "description": "Access denied."
          }
        }
      }
    }
  },
  "tags": []
}